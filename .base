#!/usr/bin/env bash

__source() {
  local sourced_file="$1"
  shift

  # shellcheck disable=1090
  if [[ -f "${sourced_file}" ]]; then
    source "${sourced_file}"
  fi
}

export WORK="$HOME/src/github.com/Shopify"
export GOPATH="$HOME/src"

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export CDPATH=".:$HOME:$HOME/code/j-martin:$WORK:$GOWORK:$GOPATH/src/github.com/j-martin/:$HOME/code/"
export VISUAL="emacsclient"

if [[ -f /opt/homebrew/bin/brew ]]; then
  export HOMEBREW_PREFIX="/opt/homebrew";
  export HOMEBREW_CELLAR="/opt/homebrew/Cellar";
  export HOMEBREW_REPOSITORY="/opt/homebrew";
  export PATH="/opt/homebrew/bin:/opt/homebrew/sbin${PATH+:$PATH}";
  export MANPATH="/opt/homebrew/share/man${MANPATH+:$MANPATH}:";
  export INFOPATH="/opt/homebrew/share/info:${INFOPATH:-}";
  export BREW_PREFIX="$(brew --prefix)"
fi

test -e /usr/local/bin/brew \
 && export BREW_PREFIX="$(brew --prefix)"

GPG_TTY="$(tty)"
export GPG_TTY

__source "$HOME/.cargo/env"
export PATH="$HOME/.cargo/bin:$PATH"

# Use '/usr/bin/ssh-add --apple-use-keychain ~/.ssh/*' to add existing keys
test -e "$TMPDIR/ssh-loaded" \
  || /usr/bin/ssh-add --apple-load-keychain && touch "$TMPDIR/ssh-loaded"

__source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
__source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"

__source "$HOME/.private/profile"

# shellcheck source=.functions/all
source "$HOME/.functions/all"
# shellcheck source=.aliases
source "$HOME/.aliases"

export PATH="$GOPATH/bin:/usr/local/sbin:$HOME/.npm/bin:/usr/local/bin:$HOME/.bin:$HOME/.local/bin:$PATH"

test -e /usr/libexec/java_home \
  && export JAVA_HOME="$(/usr/libexec/java_home -v 16 2> /dev/null || true)"
test -e /usr/local/bin/nvim \
  && export EDITOR='/usr/local/bin/nvim'

export PAGER='less -SRi'
export HOSTNAME="$HOST"

export RIPGREP_CONFIG_PATH="$HOME/.config/ripgrep"
export FZF_DEFAULT_COMMAND='rg --files 2> /dev/null'

export SDKMAN_DIR="$HOME/.sdkman"
__source "$HOME/.sdkman/bin/sdkman-init.sh"

if [[ -z "$DISPLAY" ]] && [[ -n "$XDG_VTNR" ]] && [[ "$XDG_VTNR" -eq 1 ]]; then
  exec startx
fi

if [[ -n "$(pgrep gpg-agent)" ]]; then
  export GPG_AGENT_INFO
else
  # shellcheck disable=SC2046
  eval $(gpg-agent --daemon)
fi

# Work
export PYENV_ROOT="$HOME/.pyenv"
export PATH="${PYENV_ROOT}/shims:${PATH}"
